# GoReleaser configuration for dotnet-dockerfile-gen
# See https://goreleaser.com for full reference.

project_name: dockerfile-gen

before:
  hooks:
    - go mod tidy

builds:
  - id: dotnet-dockerfile-gen
    main: .
    binary: dotnet-dockerfile-gen
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    ldflags:
      - -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.Date}}
    flags:
      - -trimpath

archives:
  - id: default
    builds:
      - dotnet-dockerfile-gen
    format_overrides:
      - goos: windows
        format: zip
    name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}'
    files:
      - README.md
      - LICENSE* # optional, included if present

checksum:
  name_template: 'checksums.txt'

# Docker image publishing to GitHub Container Registry (GHCR).
# Requires docker/login-action and buildx setup in workflow.

dockers:
  - id: cli-image
    # Use buildx for multi-platform.
    use: buildx
    ids: # reference the Go build IDs to include in this docker build
      - dotnet-dockerfile-gen
    dockerfile: Dockerfile
    image_templates:
      - ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Version }}
      - ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:latest
      - ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:v{{ .Major }}
      - ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:v{{ .Major }}.{{ .Minor }}
    build_flag_templates:
      # Push only on real (non-snapshot) releases so buildx can create/push the multi-arch manifest list.
      - '{{ if not .IsSnapshot }}--push{{ end }}'
      # Use multi-arch only when pushing; fall back to single arch on snapshots to avoid manifest list exporter error.
      - '{{ if .IsSnapshot }}--platform=linux/amd64{{ else }}--platform=linux/amd64,linux/arm64{{ end }}'
      - --label=org.opencontainers.image.title=dotnet-dockerfile-gen
      - --label=org.opencontainers.image.source=https://github.com/{{ .Env.GITHUB_REPOSITORY }}
      - --label=org.opencontainers.image.revision={{ .Commit }}
      - --label=org.opencontainers.image.created={{ .Date }}
      - --label=org.opencontainers.image.version={{ .Version }}
      - --label=org.opencontainers.image.licenses=MIT
    extra_files:
      - README.md

changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^chore:'
      - '^ci:'

snapshot:
  name_template: '{{ .Tag }}-next'

dist: dist

release:
  draft: false
  prerelease: auto

git:
  tag_sort: -version:refname
